{"ast":null,"code":"var _jsxFileName = \"/home/ram/Documents/Ghost/session-booking/src/components/UI/Modal.tsx\",\n  _s = $RefreshSig$();\nimport { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// This type is used with `forwardRef` to ensure that the `Modal` component can be used with `useImperativeHandle` to expose a `open` method\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s(function Modal({\n  children,\n  onClose\n}, ref) {\n  _s();\n  const dialog = useRef(null);\n\n  // useImperativeHandle is used to expose the `open` method to other components\n  useImperativeHandle(ref, () => {\n    return {\n      open: () => {\n        if (dialog.current) {\n          dialog.current.showModal(); // showModal() is a built-in method available on the <dialog> element\n        }\n      }\n    };\n  });\n\n  // Below, the onClose prop is set on <dialog> to handle the case that the user closes the modal via a built-in mechanism (ESC key)\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"dialog\", {\n    ref: dialog,\n    className: \"modal\",\n    onClose: onClose,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), document.getElementById(\"modal-root\"));\n}, \"oALOYKrODmbEJ+ZmGyPrlobygn0=\")), \"oALOYKrODmbEJ+ZmGyPrlobygn0=\");\n_c2 = Modal;\nexport default Modal;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal$forwardRef\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["forwardRef","useImperativeHandle","useRef","createPortal","jsxDEV","_jsxDEV","Modal","_s","_c","children","onClose","ref","dialog","open","current","showModal","className","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById","_c2","$RefreshReg$"],"sources":["/home/ram/Documents/Ghost/session-booking/src/components/UI/Modal.tsx"],"sourcesContent":["import { forwardRef, useImperativeHandle, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\n// This type is used with `forwardRef` to ensure that the `Modal` component can be used with `useImperativeHandle` to expose a `open` method\nexport type ModalHandle = {\n  open: () => void;\n};\n\ntype ModalProps = {\n  children: React.ReactNode;\n  onClose: () => void; // The onClose function prop is used to propagate the default \"close\" event that can be triggered by <dialog> (for example, when the ESC key is pressed)\n};\n\nconst Modal = forwardRef<ModalHandle, ModalProps>(function Modal(\n  { children, onClose },\n  ref\n) {\n  const dialog = useRef<HTMLDialogElement>(null);\n\n  // useImperativeHandle is used to expose the `open` method to other components\n  useImperativeHandle(ref, () => {\n    return {\n      open: () => {\n        if (dialog.current) {\n          dialog.current.showModal(); // showModal() is a built-in method available on the <dialog> element\n        }\n      },\n    };\n  });\n\n  // Below, the onClose prop is set on <dialog> to handle the case that the user closes the modal via a built-in mechanism (ESC key)\n  return createPortal(\n    <dialog ref={dialog} className=\"modal\" onClose={onClose}>\n      {children}\n    </dialog>,\n    document.getElementById(\"modal-root\")!\n  );\n});\n\nexport default Modal;\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,mBAAmB,EAAEC,MAAM,QAAQ,OAAO;AAC/D,SAASC,YAAY,QAAQ,WAAW;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,KAAK,gBAAAC,EAAA,eAAGP,UAAU,CAAAQ,EAAA,GAAAD,EAAA,CAA0B,SAASD,KAAKA,CAC9D;EAAEG,QAAQ;EAAEC;AAAQ,CAAC,EACrBC,GAAG,EACH;EAAAJ,EAAA;EACA,MAAMK,MAAM,GAAGV,MAAM,CAAoB,IAAI,CAAC;;EAE9C;EACAD,mBAAmB,CAACU,GAAG,EAAE,MAAM;IAC7B,OAAO;MACLE,IAAI,EAAEA,CAAA,KAAM;QACV,IAAID,MAAM,CAACE,OAAO,EAAE;UAClBF,MAAM,CAACE,OAAO,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9B;MACF;IACF,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,oBAAOZ,YAAY,eACjBE,OAAA;IAAQM,GAAG,EAAEC,MAAO;IAACI,SAAS,EAAC,OAAO;IAACN,OAAO,EAAEA,OAAQ;IAAAD,QAAA,EACrDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,EACTC,QAAQ,CAACC,cAAc,CAAC,YAAY,CACtC,CAAC;AACH,CAAC,kCAAC;AAACC,GAAA,GAxBGjB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAE,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}